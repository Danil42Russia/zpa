rule.plsql.CharacterDatatypeUsage.message=Use VARCHAR2 instead of {0}.
rule.plsql.CharacterDatatypeUsage.name=Use VARCHAR2 instead of CHAR and VARCHAR.
rule.plsql.CollapsibleIfStatements.message=Merge this if statement with the enclosing one.
rule.plsql.CollapsibleIfStatements.name=Collapsible "if" statements should be merged.
rule.plsql.ColumnsShouldHaveTableName.message=Specify the table of this column.
rule.plsql.ColumnsShouldHaveTableName.name=The columns in a SELECT should be prefixed with table name.
rule.plsql.ComparisonWithBoolean.message=Remove the literal "{0}" of this comparison.
rule.plsql.ComparisonWithBoolean.name=Avoid superfluous comparation against boolean literals
rule.plsql.ComparisonWithNull.message=Fix this comparison or change to "{0}".
rule.plsql.ComparisonWithNull.name=Do not compare values against the NULL literal or an empty string.
rule.plsql.DeclareSectionWithoutDeclarations.message=Remove this DECLARE keyword.
rule.plsql.DeclareSectionWithoutDeclarations.name=Do not add the DECLARE keyword if the block doesn't have any declaration.
rule.plsql.DuplicatedValueInIn.message=Remove or fix this duplicated value in the IN condition.
rule.plsql.DuplicatedValueInIn.name=Duplicated value in an IN condition.
rule.plsql.EmptyBlock.message=Either remove or fill this block of code.
rule.plsql.EmptyBlock.name=Empty blocks should be removed.
rule.plsql.EmptyStringAssignment.message=Replace this empty string by NULL.
rule.plsql.EmptyStringAssignment.name=Avoid using empty strings to represent NULL.
rule.plsql.ExplicitInParameter.message=Explicitly declare this parameter as IN.
rule.plsql.ExplicitInParameter.name=Parameter mode should be explicitly declared.
rule.plsql.FunctionWithOutParameter.message=Rewrite this function to not depend on OUT parameters.
rule.plsql.FunctionWithOutParameter.name=Avoid functions with OUT parameters.
rule.plsql.IdenticalExpression.message=Identical expressions on both sides of operator "{0}".
rule.plsql.IdenticalExpression.name=Identical expressions should not be used on both sides of an operator.
rule.plsql.IfWithExit.message=Replace this code by a EXIT WHEN statement.
rule.plsql.IfWithExit.name=Use EXIT WHEN instead of an IF statement to exit from a loop.
rule.plsql.InequalityUsage.message=Replace "%s" by "<>".
rule.plsql.InequalityUsage.name=Only "<>" should be used to test inequality.
rule.plsql.InsertWithoutColumns.message=Specify the columns in this INSERT.
rule.plsql.InsertWithoutColumns.name=Always specify the columns in an INSERT statement.
rule.plsql.NvlWithNullParameter.message=Remove the {0} parameter of this NVL.
rule.plsql.NvlWithNullParameter.name=Do not pass a NULL literal or an empty string to NVL.
rule.plsql.ParsingError.name=Parser failure.
rule.plsql.SelectAllColumns.message=SELECT * should not be used.
rule.plsql.SelectAllColumns.name=SELECT * should not be used.
rule.plsql.SelectWithRownumAndOrderBy.message=Move this ROWNUM comparation to a more external level to guarantee the ordering.
rule.plsql.SelectWithRownumAndOrderBy.name=A SELECT cannot have a comparison with ROWNUM and an ORDER BY at the same level.
rule.plsql.ToDateWithoutFormat.message=Specify the date format in this TO_DATE.
rule.plsql.ToDateWithoutFormat.name=TO_DATE without date format
rule.plsql.TooManyRowsHandler.message=Fill this TOO_MANY_ROWS exception handler.
rule.plsql.TooManyRowsHandler.name=Avoid masking the TOO_MANY_ROWS exception.
rule.plsql.UselessParenthesis.message=Remove those useless parenthesis.
rule.plsql.UselessParenthesis.name=Useless parentheses around expressions should be removed to prevent any misunderstanding.
rule.plsql.VariableInitializationWithFunctionCall.message=Move this initialization to the BEGIN...END block.
rule.plsql.VariableInitializationWithFunctionCall.name=Avoid initializing variables using functions in the declaration section.
rule.plsql.VariableInitializationWithNull.message=Remove this unnecessary initialization to NULL.
rule.plsql.VariableInitializationWithNull.name=Variables and RECORD fields do not need to be initialized with NULL.
